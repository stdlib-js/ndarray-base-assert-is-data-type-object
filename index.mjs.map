{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isInteger } from '@stdlib/assert-is-integer';\nimport { isPrimitive as isString } from '@stdlib/assert-is-string';\nimport hasProp from '@stdlib/assert-has-property';\nimport DataType from '@stdlib/ndarray-dtype-ctor';\n\n\n// MAIN //\n\n/**\n* Tests whether an input value is an ndarray data type object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether an input value is an ndarray data type object\n*\n* @example\n* import DataType from '@stdlib/ndarray-dtype-ctor';\n*\n* var bool = isDataTypeObject( new DataType( 'float64' ) );\n* // returns true\n*\n* bool = isDataTypeObject( 'float64' );\n* // returns false\n*\n* bool = isDataTypeObject( {} );\n* // returns false\n*/\nfunction isDataTypeObject( value ) {\n\treturn (\n\t\tvalue instanceof DataType ||\n\t\t(\n\t\t\ttypeof value === 'object' &&\n\t\t\tvalue !== null &&\n\t\t\tisInteger( value.alignment ) &&\n\t\t\tisInteger( value.byteLength ) &&\n\t\t\tisString( value.byteOrder ) &&\n\t\t\tisString( value.char ) &&\n\t\t\tisInteger( value.enum ) &&\n\t\t\thasProp( value, 'value' )\n\t\t)\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isDataTypeObject;\n"],"names":["isDataTypeObject","value","DataType","isInteger","alignment","byteLength","isString","byteOrder","char","enum","hasProp"],"mappings":";;yYAgDA,SAASA,EAAkBC,GAC1B,OACCA,aAAiBC,GAEC,iBAAVD,GACG,OAAVA,GACAE,EAAWF,EAAMG,YACjBD,EAAWF,EAAMI,aACjBC,EAAUL,EAAMM,YAChBD,EAAUL,EAAMO,OAChBL,EAAWF,EAAMQ,OACjBC,EAAST,EAAO,QAGnB"}